=================================
Test for module base_geometry.py
=================================

This tests only one function in class BaseGeometry: ``base_geometry``.


>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("seb", 40)
>>> bg.integer_validator("seb", "40")
Traceback (most recent call last):

	::

TypeError: seb must be an integer
>>> bg.integer_validator("Peter", -56)
Traceback (most recent call last):

	::

ValueError: Peter must be greater than 0
>>> bg.integer_validator("seb", 0)
Traceback (most recent call last):

	::

ValueError: seb must be greater than 0
>>> bg.integer_validator("seb", (40,))
Traceback (most recent call last):

	::

TypeError: seb must be an integer
>>> bg.integer_validator("seb", [40])
Traceback (most recent call last):

	::

TypeError: seb must be an integer
>>> bg.integer_validator("", 40.9)
Traceback (most recent call last):

	::

TypeError: seb must be an integer
>>> bg.integer_validator("seb", -5.8)
Traceback (most recent call last):

	::

TypeError: seb must be an integer
>>> bg.integer_validator("seb", {"tee": 40})
Traceback (most recent call last):

	::

TypeError: seb must be an integer
>>> bg.integer_validator("seb", 0.7)
Traceback (most recent call last):

	::

TypeError: seb must be an integer
